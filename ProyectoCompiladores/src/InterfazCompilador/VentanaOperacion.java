/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazCompilador;

import LogicaCompilador.*;
import java.awt.event.ActionEvent;
import java.util.Arrays;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author sandu
 */
public class VentanaOperacion extends javax.swing.JFrame {

    /**
     * Creates new form Operaciones
     */
    private HashMap<String, AFN> lista;
    
    public VentanaOperacion(){
        initComponents();
    }
    public VentanaOperacion(HashMap<String, AFN> automatas) {
        this.lista = automatas;
        initComponents();
        boxAutomatas1.removeAllItems();
        boxOperaciones.removeAllItems();
        boxAutomatas2.removeAllItems();
        boxOperaciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Basico", "Estrella+", "Estrella*", "Interrogacion", "Unir", "Concatenar"}));
        String[] aux = new String[this.lista.size()];
        int contador = 0;
        for (String k : this.lista.keySet()) {
            aux[contador] = k;
            contador++;
        }
        Arrays.sort(aux);
        boxAutomatas1.setModel(new javax.swing.DefaultComboBoxModel<>(aux));
        boxAutomatas2.setModel(new javax.swing.DefaultComboBoxModel<>(aux));
        jLabel5.setVisible(false);
        boxAutomatas2.setVisible(false);
        jLabel4.setVisible(true);
        simbolo.setVisible(true);
        this.boxAutomatas1.setName("boxAutomatas1");
        this.boxAutomatas2.setName("boxAutomatas2");
        this.boxOperaciones.setName("boxOperaciones");
        this.simbolo.setName("simbolo");
        this.btnConfirmar.setName("btnConfirmar");
    }
 
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simbolo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        boxAutomatas2 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        boxOperaciones = new javax.swing.JComboBox<>();
        boxAutomatas1 = new javax.swing.JComboBox<>();
        btnConfirmar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        simbolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simboloActionPerformed(evt);
            }
        });

        jLabel4.setText("Simbolo");

        jLabel5.setText("Concatenar/Unir");

        boxAutomatas2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxAutomatas2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxAutomatas2ItemStateChanged(evt);
            }
        });
        boxAutomatas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAutomatas2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Automatas Disponibles");

        boxOperaciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        boxOperaciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxOperacionesItemStateChanged(evt);
            }
        });
        boxOperaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxOperacionesActionPerformed(evt);
            }
        });

        boxAutomatas1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        jLabel2.setText("Operaciones");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(boxAutomatas1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(jLabel2))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxAutomatas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(boxAutomatas2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(simbolo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(simbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxAutomatas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        int flag = 0,condicion_simbolo=0;
        if (this.lista.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Aun no existen automatas", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            AFN obj1;
            AFN obj2;
            switch (boxOperaciones.getItemAt(boxOperaciones.getSelectedIndex())) {
                case "Basico":
                    obj1 = this.lista.get(boxAutomatas1.getItemAt(boxAutomatas1.getSelectedIndex()));
                    String simb = simbolo.getText();
                    if (simb.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "debe ingresar un simbolo", "Error", JOptionPane.ERROR_MESSAGE);
                        condicion_simbolo = 1;
                    }
                    else{
                        obj1.basico(simb.charAt(0));
                        
                    }
                    
                    break;
                case "Estrella+":
                    obj1 = this.lista.get(boxAutomatas1.getItemAt(boxAutomatas1.getSelectedIndex()));
                    obj1.cerraduraPositiva();
                    break;
                case "Estrella*":
                    obj1 = this.lista.get(boxAutomatas1.getItemAt(boxAutomatas1.getSelectedIndex()));
                    obj1.cerraduraEstrella();
                    break;
                case "Interrogacion":
                    obj1 = this.lista.get(boxAutomatas1.getItemAt(boxAutomatas1.getSelectedIndex()));
                    obj1.Question();
                    break;
                case "Unir":
                    obj1 = this.lista.get(boxAutomatas1.getItemAt(boxAutomatas1.getSelectedIndex()));
                    obj2 = this.lista.get(boxAutomatas2.getItemAt(boxAutomatas2.getSelectedIndex()));
                    obj1.imprimirTransicionesAFN();
                    obj2.imprimirTransicionesAFN();
                    this.lista.remove(boxAutomatas2.getItemAt(boxAutomatas2.getSelectedIndex()));
                    obj1.unir(obj2);
                    flag = 1;
                    break;
                case "Concatenar":

                    obj1 = this.lista.get(boxAutomatas1.getItemAt(boxAutomatas1.getSelectedIndex()));
                    obj2 = this.lista.get(boxAutomatas2.getItemAt(boxAutomatas2.getSelectedIndex()));
                    obj1.imprimirTransicionesAFN();
                    obj2.imprimirTransicionesAFN();
                    this.lista.remove(boxAutomatas2.getItemAt(boxAutomatas2.getSelectedIndex()));
                    obj1.concatenar(obj2);
                    flag = 1;
                    break;
            }
            if(condicion_simbolo==0){
                //JOptionPane.showMessageDialog(null, "Se ha agregado operacion de forma exitosa", "Exito", JOptionPane.INFORMATION_MESSAGE);
            }
            if (flag == 1) {
                int contador = 0;
                //se actualizan los combo box 
                String[] aux = new String[this.lista.size()];
                boxAutomatas1.removeAllItems();
                boxAutomatas2.removeAllItems();
                for (String k : this.lista.keySet()) {
                    aux[contador] = k;
                    contador++;
                }
                Arrays.sort(aux);
                boxAutomatas1.setModel(new javax.swing.DefaultComboBoxModel<>(aux));
                boxAutomatas2.setModel(new javax.swing.DefaultComboBoxModel<>(aux));

            }
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void boxAutomatas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxAutomatas2ActionPerformed

    }//GEN-LAST:event_boxAutomatas2ActionPerformed

    private void boxAutomatas2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxAutomatas2ItemStateChanged

    }//GEN-LAST:event_boxAutomatas2ItemStateChanged

    private void boxOperacionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxOperacionesItemStateChanged

    }//GEN-LAST:event_boxOperacionesItemStateChanged

    private void boxOperacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxOperacionesActionPerformed
        switch (boxOperaciones.getSelectedIndex()) {
            case 0:
                jLabel5.setVisible(false);
                boxAutomatas2.setVisible(false);
                jLabel4.setVisible(true);
                simbolo.setVisible(true);
                break;
            case 4:
                jLabel5.setVisible(true);
                boxAutomatas2.setVisible(true);
                jLabel4.setVisible(false);
                simbolo.setVisible(false);
                break;
            case 5:
                jLabel5.setVisible(true);
                boxAutomatas2.setVisible(true);
                jLabel4.setVisible(false);
                simbolo.setVisible(false);
                break;
            default:
                jLabel5.setVisible(false);
                boxAutomatas2.setVisible(false);
                jLabel4.setVisible(false);
                simbolo.setVisible(false);
                break;
        }

    }//GEN-LAST:event_boxOperacionesActionPerformed

    private void simboloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simboloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_simboloActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxAutomatas1;
    private javax.swing.JComboBox<String> boxAutomatas2;
    private javax.swing.JComboBox<String> boxOperaciones;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField simbolo;
    // End of variables declaration//GEN-END:variables
}
